<<<<<<< HEAD
"use client";

import { ReactNode, Suspense } from "react";
import "./globals.css";


//Styles
import Loading from "./loading";
import StyledComponentsRegistry from "@/config/register";

interface IProps {
  children: ReactNode;
}

export default function RootLayout({ children }: IProps) {
  return (
    <html lang="es" suppressHydrationWarning={true}>
      <head>
        <title>TuCash</title>
      </head>
      <body className="layout" translate="no" suppressHydrationWarning={true}>
          <Suspense fallback={<Loading />}>
              <StyledComponentsRegistry>
                <div>{children}</div>
              </StyledComponentsRegistry>
          </Suspense>
=======
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        {children}
>>>>>>> 50e4fd6 (Initial commit from Create Next App)
      </body>
    </html>
  );
}
